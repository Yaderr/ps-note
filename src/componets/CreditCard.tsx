import { EyeIcon, EyeSlashIcon, Square2StackIcon, TrashIcon } from '@heroicons/react/24/outline'
import './css/creditCard.css'
import { CC_TYPE } from '../interface'
import { useToggler } from '../hooks/useToggler'
import { EyeDropperIcon } from '@heroicons/react/24/outline'

interface CreditCardProps {
    number: string,
    expire: string,
    sec_code: string,
    type: CC_TYPE
}

const BrandLogo = ({ brand }: {brand: string}) => {
    if(brand === 'VISA') {
        return (
            <svg xmlns="http://www.w3.org/2000/svg" fill="#000000" viewBox="2 8.93 20 6.13">
                <path d="M16.539 9.186a4.155 4.155 0 0 0-1.451-.251c-1.6 0-2.73.806-2.738 1.963-.01.85.803 1.329 1.418 1.613.631.292.842.476.84.737-.004.397-.504.577-.969.577-.639 0-.988-.089-1.525-.312l-.199-.093-.227 1.332c.389.162 1.09.301 1.814.313 1.701 0 2.813-.801 2.826-2.032.014-.679-.426-1.192-1.352-1.616-.563-.275-.912-.459-.912-.738 0-.247.299-.511.924-.511a2.95 2.95 0 0 1 1.213.229l.15.067.227-1.287-.039.009zm4.152-.143h-1.25c-.389 0-.682.107-.852.493l-2.404 5.446h1.701l.34-.893 2.076.002c.049.209.199.891.199.891h1.5l-1.31-5.939zm-10.642-.05h1.621l-1.014 5.942H9.037l1.012-5.944v.002zm-4.115 3.275.168.825 1.584-4.05h1.717l-2.551 5.931H5.139l-1.4-5.022a.339.339 0 0 0-.149-.199 6.948 6.948 0 0 0-1.592-.589l.022-.125h2.609c.354.014.639.125.734.503l.57 2.729v-.003zm12.757.606.646-1.662c-.008.018.133-.343.215-.566l.111.513.375 1.714H18.69v.001h.001z"/>
            </svg>
        )
    } else if(brand === 'MASTERCARD') {
        return (
            <svg xmlns="http://www.w3.org/2000/svg" fill="#000000" version="1.1" viewBox="1.03 6.74 29.95 18.51">
                <path d="M16 8.73c-0.12 0.094-0.236 0.187-0.349 0.288-1.955 1.705-3.184 4.2-3.184 6.982s1.228 5.277 3.172 6.973l0.011 0.009c0.112 0.1 0.231 0.197 0.349 0.29 0.12-0.092 0.236-0.19 0.349-0.29 1.955-1.705 3.183-4.2 3.183-6.982s-1.228-5.277-3.172-6.973l-0.011-0.009c-0.112-0.1-0.23-0.195-0.349-0.288zM21.721 6.745c-0.005 0-0.011-0-0.018-0-1.903 0-3.67 0.577-5.138 1.566l0.033-0.021c0.075 0.059 0.143 0.121 0.205 0.186l0.001 0.001c2.116 1.836 3.446 4.528 3.446 7.531 0 2.996-1.323 5.682-3.417 7.507l-0.012 0.010c-0.072 0.061-0.15 0.122-0.226 0.182 1.441 0.97 3.216 1.549 5.125 1.549 5.112 0 9.256-4.144 9.256-9.256s-4.143-9.255-9.255-9.256h-0zM15.18 23.526c0.072 0.061 0.15 0.122 0.226 0.182-1.44 0.969-3.214 1.547-5.123 1.547-5.112 0-9.255-4.144-9.255-9.255s4.144-9.255 9.255-9.255c1.907 0 3.68 0.577 5.153 1.566l-0.033-0.021c-0.075 0.059-0.143 0.121-0.205 0.186l-0.001 0.001c-2.116 1.836-3.446 4.528-3.446 7.531 0 2.996 1.323 5.682 3.417 7.507l0.012 0.010z"/>
            </svg>
        )
    }else if(brand === 'AMERICAN_EXPRESS') {
        return (
            <svg xmlns="http://www.w3.org/2000/svg" fill="#000000" viewBox="0 0 36.02 24"><path d="m33.6 24h-31.2c-1.325 0-2.4-1.075-2.4-2.4v-10.096h1.729l.39-.944h.873l.389.94h3.402v-.715l.304.72h1.766l.304-.732v.73h8.453v-1.544h.16c.114.004.147.014.147.204v1.342h4.373v-.359c.447.227.974.36 1.533.36.032 0 .063 0 .095-.001h-.005 1.84l.394-.94h.873l.385.94h3.546v-.894l.536.894h2.836v-5.904h-2.807v.697l-.393-.697h-2.886v.697l-.361-.697h-3.897c-.05-.003-.11-.004-.169-.004-.553 0-1.076.128-1.54.357l.021-.009v-.344h-2.688v.344c-.276-.218-.628-.349-1.011-.349-.047 0-.093.002-.138.006h.006-9.823l-.659 1.525-.677-1.525h-3.094v.697l-.341-.697h-2.64l-1.223 2.8v-6c0-1.325 1.075-2.4 2.4-2.4h31.2c1.325 0 2.4 1.075 2.4 2.4v10.48h-1.873c-.03-.002-.066-.002-.101-.002-.434 0-.837.13-1.173.353l.008-.005v-.346h-2.77c-.03-.002-.066-.003-.102-.003-.414 0-.799.13-1.113.352l.006-.004v-.346h-4.946v.346c-.382-.218-.84-.346-1.327-.346-.013 0-.026 0-.039 0h.002-3.263v.346c-.346-.223-.768-.355-1.221-.355-.072 0-.144.003-.215.01l.009-.001h-3.651l-.836.904-.782-.904h-5.454v5.908h5.352l.861-.918.811.918h3.299v-1.383h.46c.037.002.081.002.125.002.413 0 .808-.078 1.171-.219l-.022.008v1.594h2.72v-1.539h.131c.166 0 .183.006.183.174v1.366h8.266c.03.001.066.002.101.002.474 0 .916-.142 1.284-.385l-.009.005v.378h2.622c.037.001.081.002.125.002.491 0 .958-.101 1.382-.284l-.023.009v3.082c0 1.325-1.075 2.4-2.4 2.4zm-12.495-6.039h-1.018v-4.235h2.336c.067-.006.144-.01.223-.01.36 0 .702.077 1.01.216l-.016-.006c.313.172.522.5.522.876 0 .023-.001.045-.002.067v-.003c0 .011.001.025.001.038 0 .486-.293.904-.713 1.086l-.008.003c.201.072.369.195.494.354l.002.002c.11.181.176.401.176.635 0 .049-.003.096-.008.144l.001-.006v.838h-1.016v-.53c.01-.059.016-.128.016-.198 0-.233-.066-.451-.179-.636l.003.005c-.163-.124-.37-.199-.594-.199-.052 0-.104.004-.154.012l.006-.001h-1.082v1.547zm0-3.36v.951h1.23c.027.003.057.004.089.004.149 0 .291-.034.417-.094l-.006.003c.127-.083.21-.224.21-.385 0-.008 0-.015-.001-.023v.001c.001-.008.001-.017.001-.026 0-.152-.084-.285-.208-.354l-.002-.001c-.117-.053-.253-.084-.397-.084-.029 0-.058.001-.087.004h.004zm-9.025 3.359h-4.007v-4.234h4.07l1.245 1.388 1.287-1.388h3.233c1.148 0 1.706.457 1.706 1.395 0 .955-.577 1.419-1.76 1.419h-1.265v1.419h-1.967l-1.246-1.399-1.295 1.4zm3.501-3.78-1.554 1.67 1.554 1.724zm-6.499 2.055v.842h2.488l1.15-1.242-1.106-1.234h-2.533v.77h2.222v.863zm7.507-1.633v1.078h1.307c.4 0 .63-.204.63-.56 0-.34-.214-.519-.619-.519zm18.038 3.36h-1.954v-.91h1.946c.023.003.049.005.076.005.125 0 .241-.041.335-.111l-.001.001c.073-.068.119-.165.119-.273 0-.001 0-.002 0-.003 0-.004 0-.009 0-.013 0-.107-.048-.202-.123-.266-.084-.061-.189-.097-.302-.097-.019 0-.038.001-.056.003h.002l-.187-.006c-.914-.024-1.949-.052-1.949-1.305 0-.61.382-1.261 1.451-1.261h2.017v.902h-1.845c-.023-.003-.049-.004-.076-.004-.122 0-.236.031-.336.086l.004-.002c-.089.059-.148.16-.148.273 0 .01 0 .019.001.029v-.001.011c0 .142.092.262.22.304l.002.001c.099.031.213.05.331.05.02 0 .041-.001.061-.002h-.003l.549.014c.046-.005.1-.008.154-.008.377 0 .724.131.997.351l-.003-.002c.03.024.056.05.079.079l.001.001.012 1.612c-.291.338-.72.551-1.199.551-.062 0-.123-.004-.182-.01zm-3.949 0h-1.972v-.91h1.962c.022.003.048.005.074.005.127 0 .245-.041.341-.111l-.002.001c.073-.068.118-.166.118-.273 0-.001 0-.002 0-.003 0-.002 0-.005 0-.007 0-.108-.048-.206-.123-.272-.085-.061-.192-.097-.307-.097-.019 0-.038.001-.056.003h.002l-.186-.006c-.911-.024-1.945-.052-1.945-1.305 0-.61.38-1.261 1.447-1.261h2.028v.902h-1.856c-.023-.003-.049-.004-.075-.004-.121 0-.235.031-.334.086l.004-.002c-.093.065-.153.171-.153.291 0 .148.091.275.219.328l.002.001c.1.031.214.05.333.05.021 0 .043-.001.064-.002h-.003l.545.014c.046-.005.099-.007.152-.007.38 0 .73.131 1.006.351l-.003-.003c.19.21.307.489.307.796 0 .035-.002.071-.005.105v-.005c.003.883-.532 1.333-1.587 1.333zm-2.578 0h-3.38v-4.237h3.377v.875h-2.367v.77h2.312v.863h-2.312v.842l2.37.004v.88zm1.97-7.286h-2.061l-.394-.944h-2.102l-.382.944h-1.184c-.033.002-.072.003-.111.003-.514 0-.987-.177-1.361-.474l.005.003c-.341-.377-.549-.878-.549-1.429 0-.066.003-.132.009-.196l-.001.008c-.005-.056-.008-.121-.008-.187 0-.564.21-1.078.556-1.47l-.002.002c.357-.312.827-.502 1.342-.502.069 0 .136.003.203.01l-.008-.001h.98v.903h-.96c-.036-.005-.078-.008-.121-.008-.255 0-.486.098-.659.259l.001-.001c-.184.235-.295.535-.295.86 0 .035.001.07.004.104v-.005c-.004.038-.006.083-.006.128 0 .326.107.627.287.87l-.003-.004c.169.138.386.222.624.222.029 0 .057-.001.085-.004h-.004.454l1.431-3.33h1.52l1.713 4v-4h1.541l1.778 2.948v-2.948h1.04v4.232h-1.444l-1.92-3.178v3.178zm-3.499-3.518-.697 1.688h1.397zm-9.799 3.516h-1.012v-4.234h2.328c.072-.008.156-.012.241-.012.357 0 .696.079 1 .221l-.015-.006c.309.173.514.498.514.871 0 .024-.001.047-.002.07v-.003.031c0 .487-.29.906-.706 1.094l-.008.003c.201.076.37.198.499.354l.002.002c.11.18.176.398.176.632 0 .051-.003.101-.009.151l.001-.006v.831h-1.021l-.004-.534v-.08c.006-.045.01-.097.01-.151 0-.22-.063-.425-.173-.598l.003.005c-.163-.12-.368-.193-.59-.193-.052 0-.104.004-.154.012l.006-.001h-1.085v1.54zm0-3.353v.94h1.228c.029.003.063.005.097.005.147 0 .285-.034.408-.095l-.005.002c.127-.078.21-.216.21-.373 0-.009 0-.019-.001-.028v.001c.001-.008.001-.017.001-.026 0-.151-.086-.282-.212-.347l-.002-.001c-.12-.052-.259-.083-.406-.083-.026 0-.052.001-.077.003h.003zm-10.716 3.353h-2.056l-.389-.944h-2.108l-.392.944h-1.1l1.813-4.234h1.503l1.721 4.007v-4.007h1.651l1.324 2.871 1.217-2.871h1.685v4.232h-1.04l-.002-3.312-1.467 3.313h-.888l-1.471-3.318v3.318zm-3.504-3.516-.689 1.688h1.382zm18.888 3.515h-1.032v-4.233h1.033v4.232zm-6.386 0h-3.374v-4.233h3.38v.88h-2.368v.763h2.311v.869h-2.313v.846h2.368v.874z"/></svg>
        )
    }else if(brand === 'DISCOVER') {
        return (
            <svg xmlns="http://www.w3.org/2000/svg" enableBackground="new 0 0 780 500" version="1.1" xmlSpace="preserve" viewBox="61.69 197.26 656.61 105.48"><path d="m409.41 197.26c30.938 0 56.02 23.58 56.02 52.709v0.033c0 29.129-25.082 52.742-56.02 52.742-30.941 0-56.022-23.613-56.022-52.742v-0.033c0-29.129 25.081-52.709 56.022-52.709z" fill="#F47216"/><path d="m321.43 197.94c8.836 0 16.247 1.785 25.27 6.09v22.753c-8.544-7.863-15.955-11.154-25.757-11.154-19.265 0-34.413 15.015-34.413 34.051 0 20.074 14.681 34.195 35.368 34.195 9.312 0 16.586-3.12 24.802-10.856v22.764c-9.343 4.142-16.912 5.775-25.757 5.775-31.277 0-55.581-22.597-55.581-51.736-2e-3 -28.83 24.949-51.882 56.068-51.882zm-97.113 0.626c11.546 0 22.109 3.721 30.942 10.994l-10.748 13.248c-5.351-5.646-10.411-8.027-16.563-8.027-8.854 0-15.301 4.744-15.301 10.988 0 5.354 3.618 8.188 15.944 12.481 23.364 8.043 30.289 15.176 30.289 30.926 0 19.193-14.976 32.554-36.319 32.554-15.631 0-26.993-5.795-36.457-18.871l13.268-12.03c4.73 8.608 12.622 13.223 22.42 13.223 9.163 0 15.947-5.95 15.947-13.983 0-4.164-2.056-7.733-6.158-10.258-2.066-1.195-6.158-2.978-14.199-5.646-19.292-6.538-25.91-13.527-25.91-27.186-1e-3 -16.227 14.213-28.413 32.845-28.413zm234.72 1.729h22.436l28.084 66.592 28.447-66.592h22.267l-45.493 101.69h-11.054l-44.687-101.69zm-301.21 0.152h20.541v99.143h-20.541v-99.143zm411.73 0h58.253v16.799h-37.726v22.006h36.336v16.791h-36.336v26.762h37.726v16.785h-58.253v-99.143zm115.59 57.377c15.471-2.965 23.983-12.926 23.983-28.105 0-18.562-13.575-29.271-37.266-29.271h-30.454v99.144h20.516v-39.83h2.681l28.43 39.828h25.26l-33.15-41.766zm-17.218-11.736h-6.002v-30.025h6.326c12.791 0 19.744 5.049 19.744 14.697 2e-3 9.967-6.951 15.328-20.068 15.328zm-576.09-45.641h-30.149v99.143h29.992c15.946 0 27.465-3.543 37.573-11.445 12.014-9.359 19.117-23.467 19.117-38.057 1e-3 -29.259-23.221-49.641-56.533-49.641zm23.997 74.479c-6.454 5.484-14.837 7.879-28.108 7.879h-5.514v-65.559h5.513c13.271 0 21.323 2.238 28.108 8.018 7.104 5.956 11.377 15.184 11.377 24.682 1e-3 9.513-4.273 19.024-11.376 24.98z"/></svg>
        )
    }
}

export const CreditCard = ({ number, expire, sec_code, type }: CreditCardProps) => {


    const cc_split = number.toString().match(/.{1,4}/g) ?? []
    const { visibility, toggleVisibility } = useToggler()

    const copyToClipBoard = () => {
        navigator.clipboard.writeText(`${number}`)
    }

    return (
        <div className='credit-card'>
            {/* <div className='background-f'></div> */}
            <svg className='right-top-corner' height="100" viewBox="0 0 587 400" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M0 0H587V400H200C89.5431 400 0 310.457 0 200V0Z" fill="#5669ec"/>
            </svg>

            <div className='card-header'>
                <button>
                    <TrashIcon width={25} height={25} />
                </button>
                <div className={`brand-logo ${type}`}>
                    <BrandLogo brand={type} />
                </div>
            </div>
            <div className="card-details">
                <div className='cc-number'>
                    {
                        !visibility ?
                        cc_split.map((number, index) => (
                            <span key={`${Date.now()}-${number+Math.random()}`}>
                                {
                                    index != 3 ? (
                                        <>&#x2022;&#x2022;&#x2022;&#x2022;</>
                                    )
                                    :(number)
                                }
                            </span>
                        ))
                        :(
                            cc_split.map((number) => (
                                <span key={`${Date.now()}-${number+Math.random()}`}>{number}</span>
                            ))
                        )
                    }
                    <button onClick={toggleVisibility}>
                        {
                            visibility ? <EyeSlashIcon width={22} height={22} />
                            : <EyeIcon width={22} height={22} />
                        }
                    </button>
                    <button>
                        <Square2StackIcon width={22} height={22} onClick={copyToClipBoard} />
                    </button>
                </div>
                <div className='card-info'>
                    <span className='expire'>
                        { 
                            new Date(expire).toLocaleDateString('es-CO', {
                                day: undefined,
                                year: '2-digit',
                                month: 'numeric'
                            }) 
                        }
                    </span>
                    <span>
                       CVV { !visibility ? (<>&#x2022;&#x2022;&#x2022;</>):(sec_code)}
                    </span>
                </div>
            </div>
        </div>
    )
}